
Installing a Samba Unix Domain member on Debian Bookworm (12)

I will not go into how to install Debian, there are plenty of howto's out there.

During the install, I used the following data:

IPv4 data:		set by DHCP
Nameservers:		192.168.1.2 192.168.1.3 # My Samba AD DCs, again set by DHCP
Hostname:		test12
Domain:			samdom.example.com
Local user:		adminuser

Once the install completes and the OS has rebooted, you need to login as root and add the user you created during the install ('adminuser' in my case) to sudoers:

Open a terminal and run:

usermod -aG sudo adminuser

To Speed things up, you can connect via SSH and then use cut&paste, to do this, you need to find out your new computers ipaddress.
One way of doing this is to run the following command in a terminal on your new computer:

ip r | grep 'default' | awk '{print $9}'

That should return the computers ipaddress, in my case 192.168.1.119

Now, on another machine, open a terminal and connect to the ipaddress you obtained above via SSH using the username 'adminuser'

rowland@devstation:~$ ssh adminuser@192.168.1.119
The authenticity of host '192.168.1.119 (192.168.1.119)' can't be established.
ED25519 key fingerprint is SHA256:W0d8NcuZYzcpewim/FPO4fCjAIYiCXXNfSbOnKxVFLU.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '192.168.1.119' (ED25519) to the list of known hosts.
adminuser@192.168.1.119's password: # <----- Enter your users password here

Linux test12 6.1.0-28-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.1.119-1 (2024-11-22) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
adminuser@test12:~$ 

Now run a few tests:

adminuser@test12:~$ hostname -s
test12
adminuser@test12:~$ hostname -d
samdom.example.com
adminuser@test12:~$ hostname -f
test12.samdom.example.com
adminuser@test12:~$ hostname -i
127.0.1.1
adminuser@test12:~$ hostname -I
192.168.1.119 

If you do not get the results shown above, then you need to find out why.

Checking /etc/hosts should produce something like this:

127.0.0.1	localhost
127.0.1.1	test12.samdom.example.com	test12

# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

The relevant line is the '127.0.1.1' one, it should be followed by the computers FQDN and then the short hostname.

Checking /etc/resolv.conf should produce something like this:

# Generated by NetworkManager
search samdom.example.com
nameserver 192.168.1.2
nameserver 192.168.1.3

The 'search' line should just contain the computers DNS domain and there shouldn't be a 'domain' line.
There can be multiple 'nameserver' lines, but they should all be AD DCs.

Once you are sure that DNS is correct, you can move onto setting up apt to use bookworm-backports.
This is required to get the latest version of Samba possible.

First edit /etc/apt/sources.list:

adminuser@test12:~$ sudo nano /etc/apt/sources.list

Add:

deb http://deb.debian.org/debian bookworm-backports main

Close and save the file.

Now update.

adminuser@test12:~$ sudo apt update

If required:
sudo apt upgrade -y

# Note: the following about rsyslog is optional, I am just too used to the logs being in /var/log ;-)

Put Rsyslog back:

sudo apt install rsyslog

sudo rm -rf /var/log/journal

Now install Samba along with its required packages:

adminuser@test12:~$ sudo apt install -y -t bookworm-backports attr samba smbclient winbind libnss-winbind libpam-winbind ldb-tools krb5-user python3-setproctitle

Stop the running Samba deamons and mask nmbd
adminuser@test12:~$ sudo systemctl stop nmbd smbd winbind
adminuser@test12:~$ sudo systemctl mask nmbd
Created symlink /etc/systemd/system/nmbd.service â†’ /dev/null.

You need to ensure that time is synced with the AD domain.

Kerberos only works if the date and time of the computer joining AD are the same as the AD.

First, edit /etc/systemd/timesyncd.conf so that the [Time] section looks like this:

adminuser@test12:~$ sudo nano /etc/systemd/timesyncd.conf

[Time]
NTP=rpidc2.samdom.example.com
FallbackNTP=0.debian.pool.ntp.org 1.debian.pool.ntp.org 2.debian.pool.ntp.org 3.debian.pool.ntp.org

NOTE: Replace 'rpidc2.samdom.example.com' with the FQDN of one of your AD DC's

To sync the time on the localhost, run:

adminuser@test12:~$ sudo timedatectl set-ntp true
adminuser@test12:~$ sudo systemctl restart systemd-timesyncd.service
adminuser@test12:~$ sudo timedatectl --adjust-system-clock
               Local time: Sun 2024-12-01 12:32:48 GMT
           Universal time: Sun 2024-12-01 12:32:48 UTC
                 RTC time: Sun 2024-12-01 12:32:47
                Time zone: Europe/London (GMT, +0000)
System clock synchronized: yes
              NTP service: active
          RTC in local TZ: no

Backup the existing smb.conf file. 

adminuser@test12:~$ sudo cp /etc/samba/smb.conf /etc/samba/smb.orig

Open /etc/samba/smb.conf and modify it to look like this using your Netbios domain name and REALM

adminuser@test12:~$ sudo nano /etc/samba/smb.conf

[global]
  workgroup = SAMDOM
  security = ADS
  realm = SAMDOM.EXAMPLE.COM

  dedicated keytab file = /etc/krb5.keytab
  kerberos method = secrets and keytab

  winbind use default domain = yes
  winbind expand groups = 2
  winbind refresh tickets = Yes
  disable netbios = yes
  smb ports = 445

  idmap config * : backend = tdb
  idmap config * : range = 3000-7999
  idmap config SAMDOM : backend  = rid
  idmap config SAMDOM : range = 10000-999999

  template shell = /bin/bash

  vfs objects = acl_xattr
  map acl inherit = Yes

  # Comment the following 4 lines to act as a print server
  printcap name = /dev/null
  load printers = no
  disable spoolss = yes
  printing = bsd

  # logging
  log level = 1
  log file = /var/log/samba/%m.log
  logging = file

NOTE: there are no shares, you can add these later, if required.

Modify the /etc/krbf5.conf file:
adminuser@test12:~$ sudo cp /etc/krb5.conf /etc/krb5.conf.orig

adminuser@test12:~$ sudo nano /etc/krb5.conf

[libdefaults]
	default_realm = SAMDOM.EXAMPLE.COM
	dns_lookup_realm = false
	dns_lookup_kdc = true

[realms]
SAMDOM.EXAMPLE.COM = {
	default_domain = samdom.example.com
}

[domain_realm]
	test12 = SAMDOM.EXAMPLE.COM

Replace the DNS data with your DNS data, in the 'case' as shown.

Now join the domain:

adminuser@test12:~$ sudo net ads join -UAdministrator
Password for [AD\Administrator]:	<-- Enter the Domain Administrator password here.

You should get this:

Using short domain name -- SAMDOM
Joined 'test12' to dns domain 'samdom.example.com'

But you may get this:

gensec_gse_client_prepare_ccache: Kinit for TEST12$@samdom.example.com to access ldap/rpidc2.samdom.example.com failed: Client not found in Kerberos database: NT_STATUS_LOGON_FAILURE
Using short domain name -- SAMDOM
Joined 'TEST12' to dns domain 'samdom.example.com'

If you do get the error message, you can ignore it, Samba still seems to join and work without error.
I 'think' I know what is causing this, but, in any case, I think it is a stupid error message, of course the client isn't in the Kerberos database, it is in the middle of joining!.

Now start Samba:
 
adminuser@test12:~$ sudo systemctl start winbind smbd

Check that Samba is now running with 'ps ax' in a terminal:

adminuser@test12:~$ ps ax
    PID TTY      STAT   TIME COMMAND
    .... 
 371587 ?        Ss     0:00 /usr/sbin/winbindd --foreground --no-process-group
 371605 ?        S      0:00 winbindd: domain child [TEST12]
 371607 ?        S      0:00 winbindd: domain child [SAMDOM]
 371613 ?        Ss     0:00 /usr/libexec/samba/samba-dcerpcd --libexec-rpcds --ready-signal-fd=21 --np-helper --debuglevel=3
 371669 ?        S      0:00 /usr/libexec/samba/rpcd_lsad --configfile=/etc/samba/smb.conf --worker-group=1 --worker-index=5 --debuglevel=3
 371680 ?        Ss     0:00 /usr/sbin/smbd --foreground --no-process-group
 371685 ?        S      0:00 /usr/libexec/samba/rpcd_lsad --configfile=/etc/samba/smb.conf --worker-group=1 --worker-index=6 --debuglevel=3
 371696 ?        S      0:00 smbd: notifyd .
 371697 ?        S      0:00 smbd: cleanupd 
 371715 ?        S      0:00 winbindd: idmap child

You should see something like the above in the output.

To test everything is working, enter the following command: 

adminuser@test12:~$ smbclient -NL localhost

You may see something like this:

Anonymous login successful

	Sharename       Type      Comment
	---------       ----      -------
tstream_smbXcli_np_destructor: cli_close failed on pipe srvsvc. Error was NT_STATUS_IO_TIMEOUT
cli_rpc_pipe_open_noauth: rpc_pipe_bind for pipe srvsvc failed with error NT_STATUS_IO_TIMEOUT
SMB1 disabled -- no workgroup available

Don't worry if you do get the above, just run the command again.

adminuser@test12:~$ smbclient -NL localhost
Anonymous login successful

	Sharename       Type      Comment
	---------       ----      -------
	IPC$            IPC       IPC Service (Samba 4.21.1-Debian-4.21.1+dfsg-2~bpo12+1)
SMB1 disabled -- no workgroup available

Now check and make sure that the DNS is working 

Use the following commands: 

adminuser@test12:~$ host -t SRV _ldap._tcp.samdom.example.com.
_ldap._tcp.samdom.example.com has SRV record 0 100 389 rpidc2.samdom.example.com.
_ldap._tcp.samdom.example.com has SRV record 0 100 389 rpidc1.samdom.example.com.
_ldap._tcp.samdom.example.com has SRV record 0 100 389 tmpdc1.samdom.example.com.

All of your DC's should be listed.

adminuser@test12:~$ host -t SRV _kerberos._udp.samdom.example.com.
_kerberos._udp.samdom.example.com has SRV record 0 100 88 rpidc2.samdom.example.com.
_kerberos._udp.samdom.example.com has SRV record 0 100 88 rpidc1.samdom.example.com.
_kerberos._udp.samdom.example.com has SRV record 0 100 88 tmpdc1.samdom.example.com.

Again, all of your DC's should be listed

adminuser@test12:~$ host -t A test12.samdom.example.com.
test12.samdom.example.com has address 192.168.1.119

Test Kerberos:

adminuser@test12:~$ sudo kinit Administrator
Password for Administrator@SAMDOM.EXAMPLE.COM:

adminuser@test12:~$ sudo klist
Ticket cache: FILE:/tmp/krb5cc_0
Default principal: Administrator@SAMDOM.EXAMPLE.COM

Valid starting     Expires            Service principal
01/12/24 12:48:58  01/12/24 22:48:58  krbtgt/SAMDOM.EXAMPLE.COM@SAMDOM.EXAMPLE.COM
	renew until 02/12/24 12:48:51

adminuser@test12:~$ wbinfo -u

krbtgt
guest
administrator
.........

All your AD users should be shown.

adminuser@test12:~$ wbinfo -g

dnsadmins
domain controllers
ras and ias servers
group policy creator owners
........

All your AD groups should be shown.

adminuser@test12:~$ wbinfo -i administrator
administrator:*:10500:10513::/home/SAMDOM/administrator:/bin/bash

adminuser@test12:~$ wbinfo -i rowland
rowland:*:11104:10513::/home/SAMDOM/rowland:/bin/bash

adminuser@test12:~$ wbinfo --group-info=Domain\ Users
domain users:x:10513:krbtgt,administrator,rowland,........

adminuser@test12:~$ getent passwd administrator
administrator:*:10500:10513::/home/administrator:/bin/bash

Note: never log into a Samba Unix domain member as Administrator.

adminuser@test12:~$ getent passwd rowland
rowland:*:11104:10513::/home/rowland:/bin/bash

adminuser@test12:~$ getent group Domain\ Users
domain users:x:10513:krbtgt,administrator,rowland,........

At this point, you have a fully working Unix domain member.

